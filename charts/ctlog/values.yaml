global:
  imagePullSecrets: []

namespace:
  create: false
  name: ctlog-system

server:
  replicaCount: 1
  config:
    key: treeID
    treeID: ""
  image:
    registry: ghcr.io
    repository: sigstore/scaffolding/ct_server
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    # v0.6.5
    version: "sha256:1ef2480cf8ddb1f99da0d931283f3c55babb84d79bf36f66d7bed29985bcca7e"
  livenessProbe:
    httpGet:
      path: /healthz
      port: 6962
    initialDelaySeconds: 10
  readinessProbe:
    httpGet:
      path: /healthz
      port: 6962
    initialDelaySeconds: 10
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: false
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "6963"
  nodeSelector: {}
  tolerations: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  portHTTP: 6962
  portHTTPMetrics: 6963
  service:
#    backendConfig:
#      name: ctlog-backend-config
#      spec: # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#configuring_ingress_features_through_backendconfig_parameters
#        securityPolicy:
#          name: ctlog-security-policy
#        logging:
#          enable: true
#        healthCheck:
#          port: 6962
#          requestPath: "/healthz"
#          type: HTTP
    type: ClusterIP
    ports:
      - name: 6962-tcp
        port: 80
        protocol: TCP
        targetPort: 6962
      - name: 6963-tcp
        port: 6963
        protocol: TCP
        targetPort: 6963
  ingress:
    enabled: false
    className: nginx
    hosts:
      - path: /
    annotations: {}
    tls: []
  ingresses:
    - enabled: false
      name: "gce-ingress"
      className: "gce"
      hosts:
        - host: fulcio.localhost
          paths:
            - path: /test
              pathType: Prefix
              serviceName: ""
            - path: /other-shard
              pathType: Prefix
              serviceName: other-shard
      annotations: {}
      tls: []
      staticGlobalIP: lb-ext-ip
      frontendConfigSpec:   # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#configuring_ingress_features_through_frontendconfig_parameters
        sslPolicy: ctlog-ssl-policy
        redirectToHttps:
          enabled: true
  extraArgs: []
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 65533

createtree:
  enabled: true
  name: createtree
  # This must be < 20 characters
  displayName: ctlog-tree
  image:
    registry: ghcr.io
    repository: sigstore/scaffolding/createtree
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    # v0.6.5
    version: "sha256:47206322c1d6002ffc737d94852924fae0f749aa3a64c1899eee11f502f609a6"
  ttlSecondsAfterFinished: 3600
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 65533
  annotations: {}
  nodeSelector: {}
  tolerations: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""


createctconfig:
  enabled: true
  name: createctconfig
  backoffLimit: 6
  initContainers:
    curl:
      image:
        registry: docker.io
        repository: curlimages/curl
        # -- 7.88.1
        version: "sha256:dca6e1b1c8e7b8b8e7be4e79fc78a858d12fd56245cb31bfa281dbf7c73a6498"
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
      resources: {}
      containerSecurityContext:
        enabled: false
      extraEnvVars: []
      extraEnvVarsCM: ""
      extraEnvVarsSecret: ""

  image:
    registry: ghcr.io
    repository: sigstore/scaffolding/createctconfig
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    # -- v0.6.5
    version: "sha256:2d8072d832370a8dbbe96536eaf479a5bf3a738c997394c888fed8ddcbe84a1b"
  fulcioURL: "http://fulcio-server.fulcio-system.svc"
  logPrefix: sigstorescaffolding
  privateKeyPasswordSecretName: ""
  ttlSecondsAfterFinished: 3600
  pubkeysecret: "ctlog-public-key"
  # If there's an existing private key that should be used for ctlog, specify
  # here. This is important if a key has been created and imported into TUF.
  privateSecret: ""
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 65533
  annotations: {}
  nodeSelector: {}
  tolerations: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""


trillian:
  namespace:
    name: trillian-system
  logServer:
    name: trillian-logserver
    portRPC: 8091

# Force namespace of namespaced resources
forceNamespace: ""
